{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sunil\\\\AIDI\\\\sem2\\\\aidi_project_tarsi_group\\\\Updated_aidi-project\\\\EVA\\\\eva-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport ChatWindow from \"./components/ChatWindow\";\nimport ChatInput from \"./components/ChatInput\";\nimport Sidebar from \"./components/Sidebar\";\nimport styles from \"./App.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const chatWindowRef = useRef(null);\n  const user_id = \"user123\"; // Replace with the actual user ID\n\n  const sendMessage = async message => {\n    if (!message.trim()) return;\n    const userMessage = {\n      sender: \"user\",\n      text: message\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setIsLoading(true);\n    try {\n      const response = await axios.post(\"http://localhost:8000/chat/\", {\n        question: message,\n        user_id: user_id\n      });\n      const botMessage = {\n        sender: \"bot\",\n        text: response.data.response\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n      const errorMessage = {\n        sender: \"bot\",\n        text: \"Error: Unable to get a response.\"\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n    chatWindowRef.current.scrollTop = chatWindowRef.current.scrollHeight;\n  };\n  const startNewChat = async () => {\n    try {\n      // Call the backend to start a new chat session\n      await axios.post(\"http://localhost:8000/new_chat/\", {\n        user_id: user_id\n      });\n\n      // Clear the chat window\n      setMessages([]);\n    } catch (error) {\n      console.error(\"Error starting new chat:\", error);\n    }\n  };\n  const loadChatSession = async sessionId => {\n    try {\n      const response = await axios.get(`http://localhost:8000/chat_session/${sessionId}`);\n      const session = response.data.session;\n      setMessages(session.messages); // Update the chat window with the loaded session\n    } catch (error) {\n      console.error(\"Error loading chat session:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app,\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onNewChat: startNewChat,\n      user_id: user_id,\n      onLoadSession: loadChatSession\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main,\n      children: [/*#__PURE__*/_jsxDEV(ChatWindow, {\n        messages: messages,\n        ref: chatWindowRef,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Yxq45NdeyF0NTbmMMNT0PSYxuIM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","axios","ChatWindow","ChatInput","Sidebar","styles","jsxDEV","_jsxDEV","App","_s","messages","setMessages","isLoading","setIsLoading","chatWindowRef","user_id","sendMessage","message","trim","userMessage","sender","text","prev","response","post","question","botMessage","data","error","console","errorMessage","current","scrollTop","scrollHeight","startNewChat","loadChatSession","sessionId","get","session","className","app","children","onNewChat","onLoadSession","fileName","_jsxFileName","lineNumber","columnNumber","main","ref","_c","$RefreshReg$"],"sources":["C:/Users/sunil/AIDI/sem2/aidi_project_tarsi_group/Updated_aidi-project/EVA/eva-frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport ChatWindow from \"./components/ChatWindow\";\r\nimport ChatInput from \"./components/ChatInput\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport styles from \"./App.module.css\";\r\n\r\nfunction App() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const chatWindowRef = useRef(null);\r\n  const user_id = \"user123\"; // Replace with the actual user ID\r\n\r\n  const sendMessage = async (message) => {\r\n    if (!message.trim()) return;\r\n\r\n    const userMessage = { sender: \"user\", text: message };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8000/chat/\", {\r\n        question: message,\r\n        user_id: user_id,\r\n      });\r\n      const botMessage = { sender: \"bot\", text: response.data.response };\r\n      setMessages((prev) => [...prev, botMessage]);\r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n      const errorMessage = { sender: \"bot\", text: \"Error: Unable to get a response.\" };\r\n      setMessages((prev) => [...prev, errorMessage]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n\r\n    chatWindowRef.current.scrollTop = chatWindowRef.current.scrollHeight;\r\n  };\r\n\r\n  const startNewChat = async () => {\r\n    try {\r\n      // Call the backend to start a new chat session\r\n      await axios.post(\"http://localhost:8000/new_chat/\", {\r\n        user_id: user_id,\r\n      });\r\n\r\n      // Clear the chat window\r\n      setMessages([]);\r\n    } catch (error) {\r\n      console.error(\"Error starting new chat:\", error);\r\n    }\r\n  };\r\n\r\n  const loadChatSession = async (sessionId) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8000/chat_session/${sessionId}`);\r\n      const session = response.data.session;\r\n      setMessages(session.messages); // Update the chat window with the loaded session\r\n    } catch (error) {\r\n      console.error(\"Error loading chat session:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.app}>\r\n      <Sidebar\r\n        onNewChat={startNewChat}\r\n        user_id={user_id}\r\n        onLoadSession={loadChatSession}\r\n      />\r\n      <div className={styles.main}>\r\n        <ChatWindow messages={messages} ref={chatWindowRef} isLoading={isLoading} />\r\n        <ChatInput sendMessage={sendMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}